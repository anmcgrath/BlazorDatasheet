@page "/ConditionalFormatting"
@using BlazorDatasheet.Data
@using BlazorDatasheet.Formats
@using BlazorDatasheet.Formats.DefaultConditionalFormats
@using BlazorDatasheet.Icons
@using BlazorDatasheet.Render
@using Region = BlazorDatasheet.Data.Region
<PageTitle>Conditional Formatting</PageTitle>

<h1>Conditional Formatting</h1>

<p>
    This example shows two conditional formats applied to the cells in the sheet

    <ol>
        <li>Column 1: Shows a "check" icon if the cell contains the word check.</li>
        <li>Columns 2 - 6: Shows a black and white colour gradient that depends on the cell's value in relation to all others with the conditional format applied.</li>
    </ol>
</p>

<Datasheet
    IsFixedHeight="true"
    Sheet="sheet">
</Datasheet>

@code {

    private Sheet sheet;

    protected override void OnInitialized()
    {
        sheet = new Sheet(30, 5);
        var numberScaleConditionalFormat = new NumberScaleConditionalFormat();
        var checkConditionalFormat = new CustomCheckConditionalFormat("check");
        
        var rand = new Random();

        sheet.Pause();
        for(int r = 0; r < 30; r++)
            for (int c = 0; c < 5; c++)
                sheet.TrySetCellValue(r, c, (int?)rand.Next(100));
        sheet.Resume();

        sheet.ConditionalFormatting.Apply(numberScaleConditionalFormat, new Region(0, 99, 1, 4));
        sheet.ConditionalFormatting.Apply(checkConditionalFormat, new Region(0, 99, 0, 0));

        base.OnInitialized();
    }

    public class CustomCheckConditionalFormat : ConditionalFormatAbstractBase
    {
        private readonly string _secretText;

        public CustomCheckConditionalFormat(string secretText)
        {
            _secretText = secretText;
        }

        public Format Check = new Format()
        {
            Icon = Icons.CheckIcon,
            IconColor = "green",
        };

        public override Format? CalculateFormat(int row, int col, Sheet sheet)
        {
            var cell = sheet.GetCell(row, col);
            var value = cell.GetValue<string>();

            if (value == null)
                return null;

            if (value.ToLower().Contains(_secretText))
                return Check;
            else
                return null;
        }
    }

}